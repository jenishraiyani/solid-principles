// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCommerceCore.Infrastructure.Context;

#nullable disable

namespace eCommerceCore.Migration.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240520121607_AddedAccountEntity")]
    partial class AddedAccountEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eCommerceCore.Domain.Models.AccountType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc94d070-1511-4a88-a46d-c3e029f8f4cc"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("da56f59a-2ab5-401d-ba8b-665b5340fa0c"),
                            Name = "Customer"
                        });
                });

            modelBuilder.Entity("eCommerceCore.Domain.Models.AdminAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountTypeId");

                    b.ToTable("AdminAccount");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4028251d-0368-4192-bcac-875ece2c0ccb"),
                            AccountTypeId = new Guid("bc94d070-1511-4a88-a46d-c3e029f8f4cc"),
                            ContactNumber = "7578998845",
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            Password = "Admin@123"
                        },
                        new
                        {
                            Id = new Guid("1a6f5cec-57e5-4d2e-bf23-ad5b7b4a0562"),
                            AccountTypeId = new Guid("bc94d070-1511-4a88-a46d-c3e029f8f4cc"),
                            ContactNumber = "7578998845",
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            Password = "Admin@123"
                        },
                        new
                        {
                            Id = new Guid("0554e729-5b8b-42d1-b0e3-8baa493f8ad8"),
                            AccountTypeId = new Guid("da56f59a-2ab5-401d-ba8b-665b5340fa0c"),
                            ContactNumber = "7578998845",
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            Password = "Admin@123"
                        },
                        new
                        {
                            Id = new Guid("86bb0e2c-da9a-4fc0-9a3f-d41eb5eb112d"),
                            AccountTypeId = new Guid("bc94d070-1511-4a88-a46d-c3e029f8f4cc"),
                            ContactNumber = "7578998845",
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            Password = "Admin@123"
                        },
                        new
                        {
                            Id = new Guid("b9a651f2-95ff-4509-a727-c952a67471dd"),
                            AccountTypeId = new Guid("bc94d070-1511-4a88-a46d-c3e029f8f4cc"),
                            ContactNumber = "7578998845",
                            Email = "admin@gmail.com",
                            FirstName = "Admin",
                            IsActive = true,
                            IsDeleted = false,
                            LastName = "Admin",
                            Password = "Admin@123"
                        });
                });

            modelBuilder.Entity("eCommerceCore.Domain.Models.AdminAccount", b =>
                {
                    b.HasOne("eCommerceCore.Domain.Models.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");
                });
#pragma warning restore 612, 618
        }
    }
}
